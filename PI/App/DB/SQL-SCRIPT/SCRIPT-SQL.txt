CREATE DATABASE TWEEB;

USE TWEEB;

SHOW TABLES;


CREATE TABLE usuario (
	id_usuario INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255),
    email VARCHAR(150),
    senha VARCHAR(100),
    cpf CHAR(11),
    rg CHAR(10),
    cep CHAR(8),
    endereco VARCHAR(255),
    perfil CHAR(30),
    avatar VARCHAR(255)
        
);


CREATE TABLE favoritos (
	id_favorito INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome_produto VARCHAR(255) NOT NULL,
    id_usuario INT,
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario)
    
);


CREATE TABLE fornecedor (
	id_fornecedor INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	nome_fornecedor VARCHAR(150) NOT NULL,
	marca_fornecedor VARCHAR(150) NOT NULL,
	cnpj CHAR(14) NOT NULL,
	nome_fantasia VARCHAR(50) NOT NULL,
	endereco_fornecedor VARCHAR(255) NOT NULL
    
);



CREATE TABLE departamento (
	id_departamento INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome_departamento VARCHAR(150) NOT NULL

);


CREATE TABLE questionario (
	id_questionario INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    conhecimento_tecnico VARCHAR(3) NOT NULL,
    tipo_hardware_periferico VARCHAR(15) NOT NULL,
    tipo_compra_pessoal_corporativa VARCHAR(15) NOT NULL,
    id_usuario INT,
    id_favorito INT,
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario),
    FOREIGN KEY (id_favorito) REFERENCES favoritos (id_favorito)

);


CREATE TABLE compra_personalizada (
	id_compra_personalizada INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    classificacao_usuario VARCHAR(45) NOT NULL,
    id_questionario INT,
    id_usuario INT,
    id_favorito INT,
    FOREIGN KEY (id_questionario) REFERENCES questionario (id_questionario),
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario),
    FOREIGN KEY (id_favorito) REFERENCES favoritos (id_favorito)

);


CREATE TABLE produto (
	id_produto INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	nome VARCHAR(100) NOT NULL,
	descricao TEXT NOT NULL,
	quantidade INT NOT NULL,
	preco_unid DECIMAL(10,2) NOT NULL,
	marca VARCHAR(100) NOT NULL,
	classificacao_produto VARCHAR(150) NOT NULL,
	id_departamento INT,
	id_fornecedor INT,
	id_favorito INT ,
	id_compra_personalizada INT,
    FOREIGN KEY (id_departamento) REFERENCES departamento (id_departamento),
    FOREIGN KEY (id_fornecedor) REFERENCES fornecedor (id_fornecedor),
    FOREIGN KEY (id_favorito) REFERENCES favoritos (id_favorito),
    FOREIGN KEY (id_compra_personalizada) REFERENCES compra_personalizada (id_compra_personalizada)
);


CREATE TABLE servico (
	id_servico INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    tipo_produto VARCHAR(255) NOT NULL,
    endereco VARCHAR(255) NOT NULL,
    valor DECIMAL(10,2) NOT NULL,
    prazo DATE NOT NULL,
    tipo_conserto VARCHAR(255) NOT NULL,
    descricao_defeito TEXT,
    email VARCHAR(150) NOT NULL,
    imagem VARCHAR(255) NOT NULL,
    ordem_de_servico VARCHAR(45) NOT NULL,
    status_da_ordem VARCHAR(45) NOT NULL,
    id_usuario INT,
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario)

);


CREATE TABLE compra (
	id_compra INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    valor_compra DECIMAL (10,2) NOT NULL,
    quantidade_compra INT NOT NULL,
    id_produto INT,
    id_servico INT,
    id_usuario INT,
    FOREIGN KEY (id_produto) REFERENCES produto (id_produto),
    FOREIGN KEY (id_servico) REFERENCES servico (id_servico),
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario)

);


CREATE TABLE carrinho (
	id_carrinho INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    valor_total DECIMAL(10,2) NOT NULL,
    quantidade_total VARCHAR(255) NOT NULL,
    id_servico INT,
    id_usuario INT,
    id_compra INT,
    FOREIGN KEY (id_servico) REFERENCES servico(id_servico),
    FOREIGN KEY (id_usuario) REFERENCES  usuario (id_usuario),
    FOREIGN KEY (id_compra) REFERENCES compra (id_compra)

);


CREATE TABLE pagamento (
	id_pagamento INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    valor DECIMAL(10,2) NOT NULL,
    data_p DATETIME NOT NULL,
    id_servico INT,
    id_carrinho INT,
    id_compra INT,
    id_usuario INT,
    FOREIGN KEY (id_servico) REFERENCES servico (id_servico),
    FOREIGN KEY (id_carrinho) REFERENCES carrinho (id_carrinho),
    FOREIGN KEY (id_compra) REFERENCES compra (id_compra),
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario)

);


CREATE TABLE comprovantepagamento (
	id_comprovante INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    descricao_compra VARCHAR(255) NOT NULL,
    pagamento VARCHAR(45) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    endereco VARCHAR(150) NOT NULL,
    telefone VARCHAR(11) NOT NULL,
    email VARCHAR(150) NOT NULL,
    id_pagamento INT,
    id_servico INT,
    id_usuario INT,
    id_carrinho INT,
    id_compra INT,
    FOREIGN KEY (id_pagamento) REFERENCES pagamento (id_pagamento),
    FOREIGN KEY (id_servico) REFERENCES servico (id_servico),
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario),
    FOREIGN KEY (id_carrinho) REFERENCES carrinho (id_carrinho),
    FOREIGN KEY (id_compra) REFERENCES compra (id_compra)
    
);


CREATE TABLE envio (
	id_envio INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome_destinatario CHAR(50) NOT NULL,
    cep CHAR(8) NOT NULL,
    data_entrega DATETIME NOT NULL,
    conteudo TEXT NOT NULL,
    id_pagamento INT,
    id_servico INT,
    id_compra INT,
    id_carrinho INT,
    id_usuario INT,
    FOREIGN KEY (id_pagamento) REFERENCES pagamento (id_pagamento),
    FOREIGN KEY (id_servico) REFERENCES servico (id_servico),
    FOREIGN KEY (id_compra) REFERENCES compra (id_compra),
    FOREIGN KEY (id_carrinho) REFERENCES carrinho (id_carrinho),
    FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario)
    
);







----------------NOVO DATABASE-----------------









//Leandrex da galera


use 140p2;
CREATE TABLE usuarios (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100) not null,
    sobrenome VARCHAR(100),
    email VARCHAR(100) not null UNIQUE,
    telefone VARCHAR(20),
    senha VARCHAR(255)not null ,
    tipo ENUM('cliente', 'funcionario', "administrador"),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

desc funcionario;
-- 1. Inserir o administrador geral na tabela usuarios
INSERT INTO usuarios (nome, sobrenome, email, telefone, senha, tipo)
VALUES ('Leandro', 'Silva', 'admgeral@empresa.com', '(67)99999-9999', 'adm123', 'administrador');
INSERT INTO administrador (id_usuario, matricula, cargo)
VALUES (110, 'ADM0001', 'Administrador Geral');

select * from usuarios;
select * from clientes;
select * from enderecos;
select * from funcionarios;
select * from administrador;
show tables;
select * from departamento
;
drop table funcionarios;
drop table enderecos;

CREATE TABLE clientes (
    id_usuario INT PRIMARY KEY,
    cpf VARCHAR(14) UNIQUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id) ON DELETE CASCADE
);

CREATE TABLE enderecos (
    id_endereco INT PRIMARY KEY AUTO_INCREMENT,
    id_cliente INT,
    nome_endereco VARCHAR(100),
    rua VARCHAR(100),
    numero VARCHAR(20),
    cep VARCHAR(8),
    bairro VARCHAR(100),
    cidade VARCHAR(50),
    estado VARCHAR(50),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_cliente) REFERENCES clientes(id_usuario) ON DELETE CASCADE
);

select * from produtos;

CREATE TABLE administrador (
    id_usuario INT PRIMARY KEY,
    matricula VARCHAR(20),
    cargo VARCHAR(50),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id) ON DELETE CASCADE
);



CREATE TABLE funcionarios (
    id_usuario INT PRIMARY KEY,
    matricula VARCHAR(20),
    cargo VARCHAR(50),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id) ON DELETE CASCADE
);


drop table clientes;
select * from clientes;
select * from cpf;
select * from enderecos;
SELECT u.id, u.nome, u.email, f.matricula, f.cargo
FROM usuarios u
INNER JOIN funcionarios f ON u.id = f.id_usuario
WHERE u.email = 'lelelelele@gmail.com';
CREATE TABLE respostas_preferencias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  resposta1 VARCHAR(255),
  resposta2 VARCHAR(255),
  resposta3 VARCHAR(255),
  criado_em DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES usuarios(id)
);

CREATE TABLE orcamento (
    id_orcamento INT AUTO_INCREMENT PRIMARY KEY,
    nome varchar(100) NOT NULL,
    email varchar(100) NOT NULL,
    telefone VARCHAR(20) NOT NULL,
    tipo varchar(50) NOT NULL,
    prazo varchar(30) NOT NULL,
    imagem varchar(255) NOT NULL,
    descricao text not null,
    status_orcamento ENUM('pendente', 'aceito')
);

CREATE TABLE ordem_servico (
    id_os INT AUTO_INCREMENT PRIMARY KEY,
    data_abertura TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    tipo_equipamento VARCHAR(50) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    marca_modelo VARCHAR(100),
    telefone VARCHAR(11) NOT NULL,
    endereco VARCHAR(100),
    cep VARCHAR(8),
    numero_serie VARCHAR(50),
    acessorios_entregues TEXT,
    relato_cliente TEXT,
    tecnico_responsavel VARCHAR(150),
    servicos_solicitados ENUM(
    'atualização de firmware',
    'backup e recuperação',
    'configuração de sistema',
    'formatação',
    'limpeza e manutenção preventiva',
    'serviços de software: instalação, configuração e atualização',
    'substituição peças') NOT NULL,
    estimativa_custo DECIMAL(10,2),
    aprovacao_cliente ENUM('aceito') DEFAULT 'aceito',
    servicos_realizados TEXT,
    pecas_substituidas TEXT,
    testes_realizados TEXT,
    data_conclusao DATE NOT NULL,
    observacoes TEXT
);













------------NOVO-------------------------------------------------











CREATE DATABASE Tweeb25;
USE Tweeb25;
SELECT * FROM usuarios;
SELECT * FROM clientes;
SELECT * FROM administrador;
SELECT * FROM funcionarios;
SELECT * FROM departamento;
SELECT * FROM produtos;
SELECT * FROM avaliacao_produto;
SELECT * FROM enderecos;
SELECT * FROM fornecedor;
SELECT * FROM questionario;
SELECT * FROM respostas_preferencias;
SELECT * FROM orcamento;
SELECT * FROM ordem_servico;
desc usuarios;
-- Tabela base: USUÁRIOS
CREATE TABLE `usuarios` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `sobrenome` VARCHAR(100) DEFAULT NULL,
  `email` VARCHAR(100) NOT NULL,
  `telefone` VARCHAR(20) DEFAULT NULL,
  `senha` VARCHAR(255) NOT NULL,
  `tipo` ENUM('cliente', 'funcionario', 'administrador') DEFAULT NULL,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP(),
  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `foto_perfil` VARCHAR(255) DEFAULT NULL,
  `token_recuperacao` VARCHAR(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- CLIENTES
CREATE TABLE `clientes` (
  `id_usuario` INT(11) NOT NULL,
  `cpf` VARCHAR(14) DEFAULT NULL,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP(),
  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id_usuario`),
  UNIQUE KEY `cpf` (`cpf`),
  CONSTRAINT `clientes_ibfk_1` FOREIGN KEY (`id_usuario`) REFERENCES `usuarios` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ADMINISTRADOR
CREATE TABLE `administrador` (
  `id_usuario` INT(11) NOT NULL,
  `matricula` VARCHAR(20) DEFAULT NULL,
  `cargo` VARCHAR(50) DEFAULT NULL,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP(),
  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id_usuario`),
  CONSTRAINT `administrador_ibfk_1` FOREIGN KEY (`id_usuario`) REFERENCES `usuarios` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- FUNCIONÁRIOS
CREATE TABLE `funcionarios` (
  `id_usuario` INT(11) NOT NULL,
  `matricula` VARCHAR(20) DEFAULT NULL,
  `cargo` VARCHAR(50) DEFAULT NULL,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP(),
  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id_usuario`),
  CONSTRAINT `funcionarios_ibfk_1` FOREIGN KEY (`id_usuario`) REFERENCES `usuarios` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- DEPARTAMENTO
CREATE TABLE `departamento` (
  `id_departamento` INT(11) NOT NULL AUTO_INCREMENT,
  `nome_departamento` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id_departamento`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- PRODUTOS
CREATE TABLE `produtos` (
  `id_produto` INT(11) NOT NULL AUTO_INCREMENT,
  `nome_produto` VARCHAR(100) NOT NULL,
  `marca_modelo` VARCHAR(100) NOT NULL,
  `quantidade_produto` INT(11) NOT NULL,
  `imagem_produto` VARCHAR(250) NOT NULL,
  `numero_serie` VARCHAR(25) NOT NULL,
  `custo_produto` DECIMAL(10,2) NOT NULL,
  `cor_produto` VARCHAR(20) NOT NULL,
  `preco_unid` DECIMAL(10,2) NOT NULL,
  `descricao_produto` VARCHAR(250) NOT NULL,
  `detalhes_produto` VARCHAR(500) NOT NULL,
  `id_departamento` INT(11) DEFAULT NULL,
  `entrega_gratis` TINYINT(4) NOT NULL CHECK (`entrega_gratis` IN (0,1)),
  `em_estoque` TINYINT(4) NOT NULL CHECK (`em_estoque` IN (0,1)),
  `garantia` TINYINT(4) NOT NULL CHECK (`garantia` IN (0,1)),
  `status_produto` TINYINT(4) DEFAULT NULL CHECK (`status_produto` IN (0,1)),
  PRIMARY KEY (`id_produto`),
  KEY `id_departamento` (`id_departamento`),
  CONSTRAINT `produtos_ibfk_1` FOREIGN KEY (`id_departamento`) REFERENCES `departamento` (`id_departamento`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- AVALIAÇÃO DE PRODUTO
CREATE TABLE `avaliacao_produto` (
  `id_avaliacao` INT(11) NOT NULL AUTO_INCREMENT,
  `id` INT(11) NOT NULL,
  `id_produto` INT(11) NOT NULL,
  `notas` TINYINT(4) NOT NULL CHECK (`notas` BETWEEN 1 AND 5),
  `comentario` VARCHAR(255) DEFAULT NULL,
  `data_avaliacao` DATETIME DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id_avaliacao`),
  KEY `id` (`id`),
  KEY `id_produto` (`id_produto`),
  CONSTRAINT `avaliacao_produto_ibfk_1` FOREIGN KEY (`id`) REFERENCES `usuarios` (`id`),
  CONSTRAINT `avaliacao_produto_ibfk_2` FOREIGN KEY (`id_produto`) REFERENCES `produtos` (`id_produto`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ENDEREÇOS
CREATE TABLE `enderecos` (
  `id_endereco` INT(11) NOT NULL AUTO_INCREMENT,
  `id_cliente` INT(11) DEFAULT NULL,
  `nome_endereco` VARCHAR(100) DEFAULT NULL,
  `rua` VARCHAR(100) DEFAULT NULL,
  `numero` VARCHAR(20) DEFAULT NULL,
  `cep` VARCHAR(8) DEFAULT NULL,
  `bairro` VARCHAR(100) DEFAULT NULL,
  `cidade` VARCHAR(50) DEFAULT NULL,
  `estado` VARCHAR(50) DEFAULT NULL,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP(),
  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id_endereco`),
  KEY `id_cliente` (`id_cliente`),
  CONSTRAINT `enderecos_ibfk_1` FOREIGN KEY (`id_cliente`) REFERENCES `clientes` (`id_usuario`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- FORNECEDOR
CREATE TABLE `fornecedor` (
  `id_fornecedor` INT(11) NOT NULL AUTO_INCREMENT,
  `nome_fornecedor` VARCHAR(150) NOT NULL,
  `marca_fornecedor` VARCHAR(150) NOT NULL,
  `cnpj` CHAR(14) NOT NULL,
  `nome_fantasia` VARCHAR(50) NOT NULL,
  `endereco_fornecedor` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_fornecedor`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- QUESTIONÁRIO
CREATE TABLE `questionario` (
  `id_questionario` INT(11) NOT NULL AUTO_INCREMENT,
  `conhecimento_tecnico` TINYINT(4) NOT NULL CHECK (`conhecimento_tecnico` IN (0,1)),
  `tipo_hardware_periferico` TINYINT(4) NOT NULL CHECK (`tipo_hardware_periferico` IN (0,1)),
  `tipo_compra_pessoal_corporativa` TINYINT(4) NOT NULL CHECK (`tipo_compra_pessoal_corporativa` IN (0,1)),
  `id_usuario` INT(11) DEFAULT NULL,
  PRIMARY KEY (`id_questionario`),
  KEY `id_usuario` (`id_usuario`),
  CONSTRAINT `questionario_ibfk_1` FOREIGN KEY (`id_usuario`) REFERENCES `clientes` (`id_usuario`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- RESPOSTAS DE PREFERÊNCIAS
CREATE TABLE `respostas_preferencias` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) DEFAULT NULL,
  `resposta1` VARCHAR(255) DEFAULT NULL,
  `resposta2` VARCHAR(255) DEFAULT NULL,
  `resposta3` VARCHAR(255) DEFAULT NULL,
  `criado_em` DATETIME DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `respostas_preferencias_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `usuarios` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ORÇAMENTO
CREATE TABLE `orcamento` (
  `id_orcamento` INT(11) NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `telefone` VARCHAR(20) NOT NULL,
  `tipo` VARCHAR(50) NOT NULL,
  `prazo` VARCHAR(30) NOT NULL,
  `imagem` VARCHAR(255) NOT NULL,
  `descricao` TEXT NOT NULL,
  `status_orcamento` ENUM('pendente','aceito') DEFAULT NULL,
  PRIMARY KEY (`id_orcamento`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ORDEM DE SERVIÇO
CREATE TABLE `ordem_servico` (
  `id_os` INT(11) NOT NULL AUTO_INCREMENT,
  `data_abertura` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  `tipo_equipamento` VARCHAR(100) DEFAULT NULL,
  `nome_cliente` VARCHAR(150) DEFAULT NULL,
  `email_cliente` VARCHAR(150) DEFAULT NULL,
  `marca_modelo` VARCHAR(100) DEFAULT NULL,
  `telefone` VARCHAR(11) DEFAULT NULL,
  `endereco` VARCHAR(255) DEFAULT NULL,
  `cep` VARCHAR(9) DEFAULT NULL,
  `numero_serie` VARCHAR(50) DEFAULT NULL,
  `acessorios_entregues` TEXT DEFAULT NULL,
  `relato_cliente` TEXT DEFAULT NULL,
  `tecnico_responsavel` VARCHAR(150) DEFAULT NULL,
  `servicos_solicitados` ENUM(
    'atualização de firmware','backup e recuperação','configuração de sistema',
    'formatação','limpeza e manutenção preventiva',
    'serviços de software: instalação, configuração e atualização',
    'substituição peças') DEFAULT NULL,
  `estimativa_custo` DECIMAL(10,2) DEFAULT NULL,
  `aprovacao_cliente` ENUM('aceito') DEFAULT 'aceito',
  `servicos_realizados` TEXT DEFAULT NULL,
  `pecas_substituidas` TEXT DEFAULT NULL,
  `testes_realizados` TEXT DEFAULT NULL,
  `data_conclusao` DATE DEFAULT NULL,
  `observacoes` TEXT DEFAULT NULL,
  PRIMARY KEY (`id_os`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;



INSERT INTO usuarios (nome, sobrenome, email, telefone, senha, tipo)
VALUES ('Leandro', 'Silva', 'admgeral@empresa.com', '(67)99999-9999', 'adm123', 'administrador');
INSERT INTO administrador (id_usuario, matricula, cargo)
VALUES (2, 'ADM0001', 'Administrador Geral');
INSERT INTO departamento (nome_departamento) VALUES 
('Hardwares'),
('Computadores'),
('Periféricos'),
('Energia'),
('Áudio'),
('Jogos');

-- Tabela para itens do carrinho (corrigida para o seu banco)
CREATE TABLE IF NOT EXISTS carrinho_items (
    id_item INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    id_produto INT NOT NULL,
    quantidade INT NOT NULL DEFAULT 1,
    preco_unitario DECIMAL(10,2) NOT NULL,
    data_adicionado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios (id) ON DELETE CASCADE,
    FOREIGN KEY (id_produto) REFERENCES produtos (id_produto) ON DELETE CASCADE,
    UNIQUE KEY unique_user_product (id_usuario, id_produto)
);

-- Índices para melhor performance
CREATE INDEX idx_carrinho_usuario ON carrinho_items (id_usuario);
CREATE INDEX idx_carrinho_produto ON carrinho_items (id_produto);